kind: pipeline
name: default

steps:
  - name: setup
    image: node:11
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn

  - name: build
    image: node:11
    group: testing
    volumes:
      - name: cache
        path: /tmp/cache
    secrets:
      - source: auth_callback
        target: REACT_APP_AUTH_CALLBACK
      - source: auth_client_id
        target: REACT_APP_AUTH_CLIENT_ID
      - source: auth_endpoint
        target: REACT_APP_AUTH_ENDPOINT
      - source: sentry_dsn
        target: REACT_APP_SENTRY_DSN
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn build

  - name: build-lambda
    image: node:11
    group: testing
    volumes:
      - name: cache
        path: /tmp/cache
    secrets:
      - source: sentry_dsn
        target: SENTRY_DSN
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn build:lambda

  - name: test
    image: node:11
    group: testing
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn test

  - name: compile-typescript
    image: node:11
    group: testing
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn run tsc

  - name: lint-typescript
    image: node:11
    group: testing
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn lint-ts

  - name: lint-prettier
    image: node:11
    group: testing
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn lint-prettier
  
  - name: deploy-frontend
    image: plugins/s3
    volumes:
      - name: cache
        path: /tmp/cache
    secrets:
      - source: aws_access_key
        target: AWS_ACCESS_KEY_ID
      - source: aws_secret_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch: master
      status: success
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      bucket: receipt-form-prod
      source: build/**/*
      target: /
      strip_prefix: build/
      acl: public-read
      region: eu-west-1

  - name: package-lambda
    image: kramos/alpine-zip
    when:
      event: push
      branch: master
      status: success
    commands:
      - zip -9 -r --exclude="*.ts*" --exclude="*.tsx*" --exclude="*.map*" --exclude="*.lock*" --exclude="*.git*" --exclude="*.css*" --exclude="*.scss*" --exclude="*.html*" --exclude="*.png*" --exclude="*.md*" --exclude="*LICENSE*" --exclude="*.xml*" --exclude="*.idea*" --exclude="*package-lock.json*" --exclude="build/*" lambda.zip .

  - name: deploy-lambda
    image: plugins/s3
    volumes:
      - name: cache
        path: /tmp/cache
    secrets:
      - source: aws_access_key
        target: AWS_ACCESS_KEY_ID
      - source: aws_secret_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch: master
      status: success
    settings:
      bucket: receipt-form-lambda
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      source: ./lambda.zip
      target: /
      region: eu-west-1

volumes:
  - name: cache
    host:
      path: /opt/drone/cache
