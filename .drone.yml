kind: pipeline
name: default

steps:
  - name: setup
    image: node:11
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn

  - name: build
    image: node:11
    group: testing
    volumes:
      - name: cache
        path: /tmp/cache
    environment:
      REACT_APP_AUTH_CALLBACK:
        from_secret: auth_callback
      REACT_APP_AUTH_CLIENT_ID:
        from_secret: auth_client_id
      REACT_APP_AUTH_ENDPOINT:
        from_secret: auth_endpoint
      REACT_APP_SENTRY_DSN:
        from_secret: sentry_dsn
      REACT_APP_LAMBDA_ENDPOINT:
        from_secret: lambda_endpoint
      REACT_APP_LAMBDA_KEY:
        from_secret: lambda_key
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn build

  - name: test
    image: node:11
    group: testing
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn test

  - name: compile-typescript
    image: node:11
    group: testing
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn run tsc

  - name: lint-typescript
    image: node:11
    group: testing
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn lint-ts

  - name: lint-prettier
    image: node:11
    group: testing
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn lint-prettier
  
  - name: deploy-frontend
    image: plugins/s3
    volumes:
      - name: cache
        path: /tmp/cache
    secrets:
      - source: aws_access_key
        target: AWS_ACCESS_KEY_ID
      - source: aws_secret_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch: master
      status: success
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      bucket: receipt-form-prod
      source: build/**/*
      target: /
      strip_prefix: build/
      acl: public-read
      region: eu-west-1

  - name: publish-backend
    image: plugins/docker
    secrets: [docker_username, docker_password, sentry_dsn]
    environment:
      SENTRY_DSN:
        from_secret: sentry_dsn
    when:
      event: push
      branch: master
      status: success
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: registry.online.ntnu.no/dotkom/receipt-form-backend
      registry: registry.online.ntnu.no
      dockerfile: Dockerfile.prod
      build_args:
        - SENTRY_DSN
      auto_tag: true

  - name: deploy-backend
    image: appleboy/drone-ssh
    pull: true
    secrets: [ssh_key]
    when:
      event: push
      branch: master
      status: success
    settings:
      host: nansen.online.ntnu.no
      port: 22
      username: root
      key:
        from_secret: ssh_key
      command_timeout: 600s
      script:
        - /srv/www/receipt-form-prod/deploy.sh


volumes:
  - name: cache
    host:
      path: /opt/drone/cache
